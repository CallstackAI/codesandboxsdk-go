/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VMUpdateHibernationTimeoutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VMUpdateHibernationTimeoutRequest{}

// VMUpdateHibernationTimeoutRequest struct for VMUpdateHibernationTimeoutRequest
type VMUpdateHibernationTimeoutRequest struct {
	// The new hibernation timeout in seconds.  Must be greater than 0 and less than or equal to 86400 (24 hours). 
	HibernationTimeoutSeconds int32 `json:"hibernation_timeout_seconds"`
}

type _VMUpdateHibernationTimeoutRequest VMUpdateHibernationTimeoutRequest

// NewVMUpdateHibernationTimeoutRequest instantiates a new VMUpdateHibernationTimeoutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVMUpdateHibernationTimeoutRequest(hibernationTimeoutSeconds int32) *VMUpdateHibernationTimeoutRequest {
	this := VMUpdateHibernationTimeoutRequest{}
	this.HibernationTimeoutSeconds = hibernationTimeoutSeconds
	return &this
}

// NewVMUpdateHibernationTimeoutRequestWithDefaults instantiates a new VMUpdateHibernationTimeoutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVMUpdateHibernationTimeoutRequestWithDefaults() *VMUpdateHibernationTimeoutRequest {
	this := VMUpdateHibernationTimeoutRequest{}
	return &this
}

// GetHibernationTimeoutSeconds returns the HibernationTimeoutSeconds field value
func (o *VMUpdateHibernationTimeoutRequest) GetHibernationTimeoutSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HibernationTimeoutSeconds
}

// GetHibernationTimeoutSecondsOk returns a tuple with the HibernationTimeoutSeconds field value
// and a boolean to check if the value has been set.
func (o *VMUpdateHibernationTimeoutRequest) GetHibernationTimeoutSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HibernationTimeoutSeconds, true
}

// SetHibernationTimeoutSeconds sets field value
func (o *VMUpdateHibernationTimeoutRequest) SetHibernationTimeoutSeconds(v int32) {
	o.HibernationTimeoutSeconds = v
}

func (o VMUpdateHibernationTimeoutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VMUpdateHibernationTimeoutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hibernation_timeout_seconds"] = o.HibernationTimeoutSeconds
	return toSerialize, nil
}

func (o *VMUpdateHibernationTimeoutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hibernation_timeout_seconds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVMUpdateHibernationTimeoutRequest := _VMUpdateHibernationTimeoutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVMUpdateHibernationTimeoutRequest)

	if err != nil {
		return err
	}

	*o = VMUpdateHibernationTimeoutRequest(varVMUpdateHibernationTimeoutRequest)

	return err
}

type NullableVMUpdateHibernationTimeoutRequest struct {
	value *VMUpdateHibernationTimeoutRequest
	isSet bool
}

func (v NullableVMUpdateHibernationTimeoutRequest) Get() *VMUpdateHibernationTimeoutRequest {
	return v.value
}

func (v *NullableVMUpdateHibernationTimeoutRequest) Set(val *VMUpdateHibernationTimeoutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVMUpdateHibernationTimeoutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVMUpdateHibernationTimeoutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVMUpdateHibernationTimeoutRequest(val *VMUpdateHibernationTimeoutRequest) *NullableVMUpdateHibernationTimeoutRequest {
	return &NullableVMUpdateHibernationTimeoutRequest{value: val, isSet: true}
}

func (v NullableVMUpdateHibernationTimeoutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVMUpdateHibernationTimeoutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


