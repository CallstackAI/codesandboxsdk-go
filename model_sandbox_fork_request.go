/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
)

// checks if the SandboxForkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxForkRequest{}

// SandboxForkRequest struct for SandboxForkRequest
type SandboxForkRequest struct {
	// Sandbox description. Maximum 255 characters. Defaults to description of original sandbox.
	Description *string `json:"description,omitempty"`
	// Sandbox frozen status. When true, edits to the sandbox are restricted. Defaults to frozen status of the original sandbox.
	IsFrozen *bool `json:"is_frozen,omitempty"`
	// Path to the collection where the new sandbox should be stored. Defaults to \"/\". If no collection exists at the given path, it will be created.
	Path *string `json:"path,omitempty"`
	// Sandbox privacy. 0 for public, 1 for unlisted, and 2 for private. Subject to the minimum privacy restrictions of the workspace. Defaults to the privacy of the original sandbox.
	Privacy *int32 `json:"privacy,omitempty"`
	StartOptions *SandboxForkRequestStartOptions `json:"start_options,omitempty"`
	// Tags to set on the new sandbox, if any. Will not inherit tags from the source sandbox.
	Tags []string `json:"tags,omitempty"`
	// Sandbox title. Maximum 255 characters. Defaults to title of original sandbox with (forked).
	Title *string `json:"title,omitempty"`
}

// NewSandboxForkRequest instantiates a new SandboxForkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxForkRequest() *SandboxForkRequest {
	this := SandboxForkRequest{}
	var description string = "[Original description]"
	this.Description = &description
	var isFrozen bool = false
	this.IsFrozen = &isFrozen
	var path string = "/"
	this.Path = &path
	var privacy int32 = 0
	this.Privacy = &privacy
	var title string = "[Original title]"
	this.Title = &title
	return &this
}

// NewSandboxForkRequestWithDefaults instantiates a new SandboxForkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxForkRequestWithDefaults() *SandboxForkRequest {
	this := SandboxForkRequest{}
	var description string = "[Original description]"
	this.Description = &description
	var isFrozen bool = false
	this.IsFrozen = &isFrozen
	var path string = "/"
	this.Path = &path
	var privacy int32 = 0
	this.Privacy = &privacy
	var title string = "[Original title]"
	this.Title = &title
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SandboxForkRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIsFrozen returns the IsFrozen field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetIsFrozen() bool {
	if o == nil || IsNil(o.IsFrozen) {
		var ret bool
		return ret
	}
	return *o.IsFrozen
}

// GetIsFrozenOk returns a tuple with the IsFrozen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetIsFrozenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFrozen) {
		return nil, false
	}
	return o.IsFrozen, true
}

// HasIsFrozen returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasIsFrozen() bool {
	if o != nil && !IsNil(o.IsFrozen) {
		return true
	}

	return false
}

// SetIsFrozen gets a reference to the given bool and assigns it to the IsFrozen field.
func (o *SandboxForkRequest) SetIsFrozen(v bool) {
	o.IsFrozen = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SandboxForkRequest) SetPath(v string) {
	o.Path = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetPrivacy() int32 {
	if o == nil || IsNil(o.Privacy) {
		var ret int32
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetPrivacyOk() (*int32, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given int32 and assigns it to the Privacy field.
func (o *SandboxForkRequest) SetPrivacy(v int32) {
	o.Privacy = &v
}

// GetStartOptions returns the StartOptions field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetStartOptions() SandboxForkRequestStartOptions {
	if o == nil || IsNil(o.StartOptions) {
		var ret SandboxForkRequestStartOptions
		return ret
	}
	return *o.StartOptions
}

// GetStartOptionsOk returns a tuple with the StartOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetStartOptionsOk() (*SandboxForkRequestStartOptions, bool) {
	if o == nil || IsNil(o.StartOptions) {
		return nil, false
	}
	return o.StartOptions, true
}

// HasStartOptions returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasStartOptions() bool {
	if o != nil && !IsNil(o.StartOptions) {
		return true
	}

	return false
}

// SetStartOptions gets a reference to the given SandboxForkRequestStartOptions and assigns it to the StartOptions field.
func (o *SandboxForkRequest) SetStartOptions(v SandboxForkRequestStartOptions) {
	o.StartOptions = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SandboxForkRequest) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SandboxForkRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxForkRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SandboxForkRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SandboxForkRequest) SetTitle(v string) {
	o.Title = &v
}

func (o SandboxForkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxForkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IsFrozen) {
		toSerialize["is_frozen"] = o.IsFrozen
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !IsNil(o.StartOptions) {
		toSerialize["start_options"] = o.StartOptions
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableSandboxForkRequest struct {
	value *SandboxForkRequest
	isSet bool
}

func (v NullableSandboxForkRequest) Get() *SandboxForkRequest {
	return v.value
}

func (v *NullableSandboxForkRequest) Set(val *SandboxForkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxForkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxForkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxForkRequest(val *SandboxForkRequest) *NullableSandboxForkRequest {
	return &NullableSandboxForkRequest{value: val, isSet: true}
}

func (v NullableSandboxForkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxForkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


