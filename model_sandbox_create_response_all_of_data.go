/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SandboxCreateResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxCreateResponseAllOfData{}

// SandboxCreateResponseAllOfData struct for SandboxCreateResponseAllOfData
type SandboxCreateResponseAllOfData struct {
	Alias string `json:"alias"`
	Id string `json:"id"`
	Title NullableString `json:"title"`
}

type _SandboxCreateResponseAllOfData SandboxCreateResponseAllOfData

// NewSandboxCreateResponseAllOfData instantiates a new SandboxCreateResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCreateResponseAllOfData(alias string, id string, title NullableString) *SandboxCreateResponseAllOfData {
	this := SandboxCreateResponseAllOfData{}
	this.Alias = alias
	this.Id = id
	this.Title = title
	return &this
}

// NewSandboxCreateResponseAllOfDataWithDefaults instantiates a new SandboxCreateResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCreateResponseAllOfDataWithDefaults() *SandboxCreateResponseAllOfData {
	this := SandboxCreateResponseAllOfData{}
	return &this
}

// GetAlias returns the Alias field value
func (o *SandboxCreateResponseAllOfData) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *SandboxCreateResponseAllOfData) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *SandboxCreateResponseAllOfData) SetAlias(v string) {
	o.Alias = v
}

// GetId returns the Id field value
func (o *SandboxCreateResponseAllOfData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SandboxCreateResponseAllOfData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SandboxCreateResponseAllOfData) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SandboxCreateResponseAllOfData) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}

	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SandboxCreateResponseAllOfData) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// SetTitle sets field value
func (o *SandboxCreateResponseAllOfData) SetTitle(v string) {
	o.Title.Set(&v)
}

func (o SandboxCreateResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxCreateResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alias"] = o.Alias
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title.Get()
	return toSerialize, nil
}

func (o *SandboxCreateResponseAllOfData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alias",
		"id",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSandboxCreateResponseAllOfData := _SandboxCreateResponseAllOfData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSandboxCreateResponseAllOfData)

	if err != nil {
		return err
	}

	*o = SandboxCreateResponseAllOfData(varSandboxCreateResponseAllOfData)

	return err
}

type NullableSandboxCreateResponseAllOfData struct {
	value *SandboxCreateResponseAllOfData
	isSet bool
}

func (v NullableSandboxCreateResponseAllOfData) Get() *SandboxCreateResponseAllOfData {
	return v.value
}

func (v *NullableSandboxCreateResponseAllOfData) Set(val *SandboxCreateResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCreateResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCreateResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCreateResponseAllOfData(val *SandboxCreateResponseAllOfData) *NullableSandboxCreateResponseAllOfData {
	return &NullableSandboxCreateResponseAllOfData{value: val, isSet: true}
}

func (v NullableSandboxCreateResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCreateResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


