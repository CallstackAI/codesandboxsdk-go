/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SandboxGetResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxGetResponseAllOfData{}

// SandboxGetResponseAllOfData struct for SandboxGetResponseAllOfData
type SandboxGetResponseAllOfData struct {
	CreatedAt time.Time `json:"created_at"`
	Description NullableString `json:"description,omitempty"`
	Id string `json:"id"`
	IsFrozen bool `json:"is_frozen"`
	Privacy int32 `json:"privacy"`
	Tags []string `json:"tags"`
	Title NullableString `json:"title,omitempty"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _SandboxGetResponseAllOfData SandboxGetResponseAllOfData

// NewSandboxGetResponseAllOfData instantiates a new SandboxGetResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxGetResponseAllOfData(createdAt time.Time, id string, isFrozen bool, privacy int32, tags []string, updatedAt time.Time) *SandboxGetResponseAllOfData {
	this := SandboxGetResponseAllOfData{}
	this.CreatedAt = createdAt
	this.Id = id
	this.IsFrozen = isFrozen
	this.Privacy = privacy
	this.Tags = tags
	this.UpdatedAt = updatedAt
	return &this
}

// NewSandboxGetResponseAllOfDataWithDefaults instantiates a new SandboxGetResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxGetResponseAllOfDataWithDefaults() *SandboxGetResponseAllOfData {
	this := SandboxGetResponseAllOfData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *SandboxGetResponseAllOfData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SandboxGetResponseAllOfData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SandboxGetResponseAllOfData) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SandboxGetResponseAllOfData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SandboxGetResponseAllOfData) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SandboxGetResponseAllOfData) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SandboxGetResponseAllOfData) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SandboxGetResponseAllOfData) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value
func (o *SandboxGetResponseAllOfData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SandboxGetResponseAllOfData) SetId(v string) {
	o.Id = v
}

// GetIsFrozen returns the IsFrozen field value
func (o *SandboxGetResponseAllOfData) GetIsFrozen() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFrozen
}

// GetIsFrozenOk returns a tuple with the IsFrozen field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetIsFrozenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFrozen, true
}

// SetIsFrozen sets field value
func (o *SandboxGetResponseAllOfData) SetIsFrozen(v bool) {
	o.IsFrozen = v
}

// GetPrivacy returns the Privacy field value
func (o *SandboxGetResponseAllOfData) GetPrivacy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetPrivacyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Privacy, true
}

// SetPrivacy sets field value
func (o *SandboxGetResponseAllOfData) SetPrivacy(v int32) {
	o.Privacy = v
}

// GetTags returns the Tags field value
func (o *SandboxGetResponseAllOfData) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *SandboxGetResponseAllOfData) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SandboxGetResponseAllOfData) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SandboxGetResponseAllOfData) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *SandboxGetResponseAllOfData) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *SandboxGetResponseAllOfData) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *SandboxGetResponseAllOfData) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *SandboxGetResponseAllOfData) UnsetTitle() {
	o.Title.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SandboxGetResponseAllOfData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SandboxGetResponseAllOfData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SandboxGetResponseAllOfData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o SandboxGetResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxGetResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["is_frozen"] = o.IsFrozen
	toSerialize["privacy"] = o.Privacy
	toSerialize["tags"] = o.Tags
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *SandboxGetResponseAllOfData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"id",
		"is_frozen",
		"privacy",
		"tags",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSandboxGetResponseAllOfData := _SandboxGetResponseAllOfData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSandboxGetResponseAllOfData)

	if err != nil {
		return err
	}

	*o = SandboxGetResponseAllOfData(varSandboxGetResponseAllOfData)

	return err
}

type NullableSandboxGetResponseAllOfData struct {
	value *SandboxGetResponseAllOfData
	isSet bool
}

func (v NullableSandboxGetResponseAllOfData) Get() *SandboxGetResponseAllOfData {
	return v.value
}

func (v *NullableSandboxGetResponseAllOfData) Set(val *SandboxGetResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxGetResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxGetResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxGetResponseAllOfData(val *SandboxGetResponseAllOfData) *NullableSandboxGetResponseAllOfData {
	return &NullableSandboxGetResponseAllOfData{value: val, isSet: true}
}

func (v NullableSandboxGetResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxGetResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


