/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
)

// checks if the SandboxCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxCreateResponse{}

// SandboxCreateResponse struct for SandboxCreateResponse
type SandboxCreateResponse struct {
	Errors []Error2 `json:"errors,omitempty"`
	Success *bool `json:"success,omitempty"`
	Data *SandboxCreateResponseAllOfData `json:"data,omitempty"`
}

// NewSandboxCreateResponse instantiates a new SandboxCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCreateResponse() *SandboxCreateResponse {
	this := SandboxCreateResponse{}
	return &this
}

// NewSandboxCreateResponseWithDefaults instantiates a new SandboxCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCreateResponseWithDefaults() *SandboxCreateResponse {
	this := SandboxCreateResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *SandboxCreateResponse) GetErrors() []Error2 {
	if o == nil || IsNil(o.Errors) {
		var ret []Error2
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateResponse) GetErrorsOk() ([]Error2, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *SandboxCreateResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error2 and assigns it to the Errors field.
func (o *SandboxCreateResponse) SetErrors(v []Error2) {
	o.Errors = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *SandboxCreateResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *SandboxCreateResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *SandboxCreateResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SandboxCreateResponse) GetData() SandboxCreateResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret SandboxCreateResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateResponse) GetDataOk() (*SandboxCreateResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SandboxCreateResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given SandboxCreateResponseAllOfData and assigns it to the Data field.
func (o *SandboxCreateResponse) SetData(v SandboxCreateResponseAllOfData) {
	o.Data = &v
}

func (o SandboxCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableSandboxCreateResponse struct {
	value *SandboxCreateResponse
	isSet bool
}

func (v NullableSandboxCreateResponse) Get() *SandboxCreateResponse {
	return v.value
}

func (v *NullableSandboxCreateResponse) Set(val *SandboxCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCreateResponse(val *SandboxCreateResponse) *NullableSandboxCreateResponse {
	return &NullableSandboxCreateResponse{value: val, isSet: true}
}

func (v NullableSandboxCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


