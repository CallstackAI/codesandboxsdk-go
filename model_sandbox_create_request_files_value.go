/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
)

// checks if the SandboxCreateRequestFilesValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxCreateRequestFilesValue{}

// SandboxCreateRequestFilesValue struct for SandboxCreateRequestFilesValue
type SandboxCreateRequestFilesValue struct {
	// If the file has binary (non plain-text) contents, place the base-64 encoded contents in this key. Should be empty or missing if `is_binary` is `false`.
	BinaryContent *string `json:"binary_content,omitempty"`
	// If the file is non-binary in nature, place the (escaped) plain text contents in this key. Should be empty or missing if `is_binary` is `true`.
	Code *string `json:"code,omitempty"`
	// Whether the file contains binary contents.
	IsBinary *bool `json:"is_binary,omitempty"`
}

// NewSandboxCreateRequestFilesValue instantiates a new SandboxCreateRequestFilesValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCreateRequestFilesValue() *SandboxCreateRequestFilesValue {
	this := SandboxCreateRequestFilesValue{}
	var isBinary bool = false
	this.IsBinary = &isBinary
	return &this
}

// NewSandboxCreateRequestFilesValueWithDefaults instantiates a new SandboxCreateRequestFilesValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCreateRequestFilesValueWithDefaults() *SandboxCreateRequestFilesValue {
	this := SandboxCreateRequestFilesValue{}
	var isBinary bool = false
	this.IsBinary = &isBinary
	return &this
}

// GetBinaryContent returns the BinaryContent field value if set, zero value otherwise.
func (o *SandboxCreateRequestFilesValue) GetBinaryContent() string {
	if o == nil || IsNil(o.BinaryContent) {
		var ret string
		return ret
	}
	return *o.BinaryContent
}

// GetBinaryContentOk returns a tuple with the BinaryContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateRequestFilesValue) GetBinaryContentOk() (*string, bool) {
	if o == nil || IsNil(o.BinaryContent) {
		return nil, false
	}
	return o.BinaryContent, true
}

// HasBinaryContent returns a boolean if a field has been set.
func (o *SandboxCreateRequestFilesValue) HasBinaryContent() bool {
	if o != nil && !IsNil(o.BinaryContent) {
		return true
	}

	return false
}

// SetBinaryContent gets a reference to the given string and assigns it to the BinaryContent field.
func (o *SandboxCreateRequestFilesValue) SetBinaryContent(v string) {
	o.BinaryContent = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *SandboxCreateRequestFilesValue) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateRequestFilesValue) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *SandboxCreateRequestFilesValue) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *SandboxCreateRequestFilesValue) SetCode(v string) {
	o.Code = &v
}

// GetIsBinary returns the IsBinary field value if set, zero value otherwise.
func (o *SandboxCreateRequestFilesValue) GetIsBinary() bool {
	if o == nil || IsNil(o.IsBinary) {
		var ret bool
		return ret
	}
	return *o.IsBinary
}

// GetIsBinaryOk returns a tuple with the IsBinary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateRequestFilesValue) GetIsBinaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBinary) {
		return nil, false
	}
	return o.IsBinary, true
}

// HasIsBinary returns a boolean if a field has been set.
func (o *SandboxCreateRequestFilesValue) HasIsBinary() bool {
	if o != nil && !IsNil(o.IsBinary) {
		return true
	}

	return false
}

// SetIsBinary gets a reference to the given bool and assigns it to the IsBinary field.
func (o *SandboxCreateRequestFilesValue) SetIsBinary(v bool) {
	o.IsBinary = &v
}

func (o SandboxCreateRequestFilesValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxCreateRequestFilesValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BinaryContent) {
		toSerialize["binary_content"] = o.BinaryContent
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.IsBinary) {
		toSerialize["is_binary"] = o.IsBinary
	}
	return toSerialize, nil
}

type NullableSandboxCreateRequestFilesValue struct {
	value *SandboxCreateRequestFilesValue
	isSet bool
}

func (v NullableSandboxCreateRequestFilesValue) Get() *SandboxCreateRequestFilesValue {
	return v.value
}

func (v *NullableSandboxCreateRequestFilesValue) Set(val *SandboxCreateRequestFilesValue) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCreateRequestFilesValue) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCreateRequestFilesValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCreateRequestFilesValue(val *SandboxCreateRequestFilesValue) *NullableSandboxCreateRequestFilesValue {
	return &NullableSandboxCreateRequestFilesValue{value: val, isSet: true}
}

func (v NullableSandboxCreateRequestFilesValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCreateRequestFilesValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


