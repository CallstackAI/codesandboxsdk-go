/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
)

// checks if the TokenCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenCreateResponse{}

// TokenCreateResponse struct for TokenCreateResponse
type TokenCreateResponse struct {
	Errors []Error6 `json:"errors,omitempty"`
	Success *bool `json:"success,omitempty"`
	Data *TokenCreateResponseAllOfData `json:"data,omitempty"`
}

// NewTokenCreateResponse instantiates a new TokenCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenCreateResponse() *TokenCreateResponse {
	this := TokenCreateResponse{}
	return &this
}

// NewTokenCreateResponseWithDefaults instantiates a new TokenCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenCreateResponseWithDefaults() *TokenCreateResponse {
	this := TokenCreateResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *TokenCreateResponse) GetErrors() []Error6 {
	if o == nil || IsNil(o.Errors) {
		var ret []Error6
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateResponse) GetErrorsOk() ([]Error6, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *TokenCreateResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error6 and assigns it to the Errors field.
func (o *TokenCreateResponse) SetErrors(v []Error6) {
	o.Errors = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *TokenCreateResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *TokenCreateResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *TokenCreateResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TokenCreateResponse) GetData() TokenCreateResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret TokenCreateResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateResponse) GetDataOk() (*TokenCreateResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TokenCreateResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given TokenCreateResponseAllOfData and assigns it to the Data field.
func (o *TokenCreateResponse) SetData(v TokenCreateResponseAllOfData) {
	o.Data = &v
}

func (o TokenCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableTokenCreateResponse struct {
	value *TokenCreateResponse
	isSet bool
}

func (v NullableTokenCreateResponse) Get() *TokenCreateResponse {
	return v.value
}

func (v *NullableTokenCreateResponse) Set(val *TokenCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenCreateResponse(val *TokenCreateResponse) *NullableTokenCreateResponse {
	return &NullableTokenCreateResponse{value: val, isSet: true}
}

func (v NullableTokenCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


