/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
)

// checks if the SandboxListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxListResponse{}

// SandboxListResponse struct for SandboxListResponse
type SandboxListResponse struct {
	Errors []Error5 `json:"errors,omitempty"`
	Success *bool `json:"success,omitempty"`
	Data *SandboxListResponseAllOfData `json:"data,omitempty"`
}

// NewSandboxListResponse instantiates a new SandboxListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxListResponse() *SandboxListResponse {
	this := SandboxListResponse{}
	return &this
}

// NewSandboxListResponseWithDefaults instantiates a new SandboxListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxListResponseWithDefaults() *SandboxListResponse {
	this := SandboxListResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *SandboxListResponse) GetErrors() []Error5 {
	if o == nil || IsNil(o.Errors) {
		var ret []Error5
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxListResponse) GetErrorsOk() ([]Error5, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *SandboxListResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error5 and assigns it to the Errors field.
func (o *SandboxListResponse) SetErrors(v []Error5) {
	o.Errors = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *SandboxListResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxListResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *SandboxListResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *SandboxListResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SandboxListResponse) GetData() SandboxListResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret SandboxListResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxListResponse) GetDataOk() (*SandboxListResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SandboxListResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given SandboxListResponseAllOfData and assigns it to the Data field.
func (o *SandboxListResponse) SetData(v SandboxListResponseAllOfData) {
	o.Data = &v
}

func (o SandboxListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableSandboxListResponse struct {
	value *SandboxListResponse
	isSet bool
}

func (v NullableSandboxListResponse) Get() *SandboxListResponse {
	return v.value
}

func (v *NullableSandboxListResponse) Set(val *SandboxListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxListResponse(val *SandboxListResponse) *NullableSandboxListResponse {
	return &NullableSandboxListResponse{value: val, isSet: true}
}

func (v NullableSandboxListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


