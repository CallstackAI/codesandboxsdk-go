/*
CodeSandbox API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-07-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csdkgo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SandboxForkResponseAllOfDataStartResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxForkResponseAllOfDataStartResponse{}

// SandboxForkResponseAllOfDataStartResponse VM start response. Only present when start_options were provided in the request.
type SandboxForkResponseAllOfDataStartResponse struct {
	BootupType string `json:"bootup_type"`
	Cluster string `json:"cluster"`
	Id string `json:"id"`
	LatestPitcherVersion string `json:"latest_pitcher_version"`
	PitcherManagerVersion string `json:"pitcher_manager_version"`
	PitcherToken string `json:"pitcher_token"`
	PitcherUrl string `json:"pitcher_url"`
	PitcherVersion string `json:"pitcher_version"`
	ReconnectToken string `json:"reconnect_token"`
	UserWorkspacePath string `json:"user_workspace_path"`
	WorkspacePath string `json:"workspace_path"`
}

type _SandboxForkResponseAllOfDataStartResponse SandboxForkResponseAllOfDataStartResponse

// NewSandboxForkResponseAllOfDataStartResponse instantiates a new SandboxForkResponseAllOfDataStartResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxForkResponseAllOfDataStartResponse(bootupType string, cluster string, id string, latestPitcherVersion string, pitcherManagerVersion string, pitcherToken string, pitcherUrl string, pitcherVersion string, reconnectToken string, userWorkspacePath string, workspacePath string) *SandboxForkResponseAllOfDataStartResponse {
	this := SandboxForkResponseAllOfDataStartResponse{}
	this.BootupType = bootupType
	this.Cluster = cluster
	this.Id = id
	this.LatestPitcherVersion = latestPitcherVersion
	this.PitcherManagerVersion = pitcherManagerVersion
	this.PitcherToken = pitcherToken
	this.PitcherUrl = pitcherUrl
	this.PitcherVersion = pitcherVersion
	this.ReconnectToken = reconnectToken
	this.UserWorkspacePath = userWorkspacePath
	this.WorkspacePath = workspacePath
	return &this
}

// NewSandboxForkResponseAllOfDataStartResponseWithDefaults instantiates a new SandboxForkResponseAllOfDataStartResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxForkResponseAllOfDataStartResponseWithDefaults() *SandboxForkResponseAllOfDataStartResponse {
	this := SandboxForkResponseAllOfDataStartResponse{}
	return &this
}

// GetBootupType returns the BootupType field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetBootupType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BootupType
}

// GetBootupTypeOk returns a tuple with the BootupType field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetBootupTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BootupType, true
}

// SetBootupType sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetBootupType(v string) {
	o.BootupType = v
}

// GetCluster returns the Cluster field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetCluster(v string) {
	o.Cluster = v
}

// GetId returns the Id field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetId(v string) {
	o.Id = v
}

// GetLatestPitcherVersion returns the LatestPitcherVersion field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetLatestPitcherVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LatestPitcherVersion
}

// GetLatestPitcherVersionOk returns a tuple with the LatestPitcherVersion field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetLatestPitcherVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestPitcherVersion, true
}

// SetLatestPitcherVersion sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetLatestPitcherVersion(v string) {
	o.LatestPitcherVersion = v
}

// GetPitcherManagerVersion returns the PitcherManagerVersion field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherManagerVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PitcherManagerVersion
}

// GetPitcherManagerVersionOk returns a tuple with the PitcherManagerVersion field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherManagerVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PitcherManagerVersion, true
}

// SetPitcherManagerVersion sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetPitcherManagerVersion(v string) {
	o.PitcherManagerVersion = v
}

// GetPitcherToken returns the PitcherToken field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PitcherToken
}

// GetPitcherTokenOk returns a tuple with the PitcherToken field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PitcherToken, true
}

// SetPitcherToken sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetPitcherToken(v string) {
	o.PitcherToken = v
}

// GetPitcherUrl returns the PitcherUrl field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PitcherUrl
}

// GetPitcherUrlOk returns a tuple with the PitcherUrl field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PitcherUrl, true
}

// SetPitcherUrl sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetPitcherUrl(v string) {
	o.PitcherUrl = v
}

// GetPitcherVersion returns the PitcherVersion field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PitcherVersion
}

// GetPitcherVersionOk returns a tuple with the PitcherVersion field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetPitcherVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PitcherVersion, true
}

// SetPitcherVersion sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetPitcherVersion(v string) {
	o.PitcherVersion = v
}

// GetReconnectToken returns the ReconnectToken field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetReconnectToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReconnectToken
}

// GetReconnectTokenOk returns a tuple with the ReconnectToken field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetReconnectTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReconnectToken, true
}

// SetReconnectToken sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetReconnectToken(v string) {
	o.ReconnectToken = v
}

// GetUserWorkspacePath returns the UserWorkspacePath field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetUserWorkspacePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserWorkspacePath
}

// GetUserWorkspacePathOk returns a tuple with the UserWorkspacePath field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetUserWorkspacePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserWorkspacePath, true
}

// SetUserWorkspacePath sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetUserWorkspacePath(v string) {
	o.UserWorkspacePath = v
}

// GetWorkspacePath returns the WorkspacePath field value
func (o *SandboxForkResponseAllOfDataStartResponse) GetWorkspacePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspacePath
}

// GetWorkspacePathOk returns a tuple with the WorkspacePath field value
// and a boolean to check if the value has been set.
func (o *SandboxForkResponseAllOfDataStartResponse) GetWorkspacePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspacePath, true
}

// SetWorkspacePath sets field value
func (o *SandboxForkResponseAllOfDataStartResponse) SetWorkspacePath(v string) {
	o.WorkspacePath = v
}

func (o SandboxForkResponseAllOfDataStartResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxForkResponseAllOfDataStartResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bootup_type"] = o.BootupType
	toSerialize["cluster"] = o.Cluster
	toSerialize["id"] = o.Id
	toSerialize["latest_pitcher_version"] = o.LatestPitcherVersion
	toSerialize["pitcher_manager_version"] = o.PitcherManagerVersion
	toSerialize["pitcher_token"] = o.PitcherToken
	toSerialize["pitcher_url"] = o.PitcherUrl
	toSerialize["pitcher_version"] = o.PitcherVersion
	toSerialize["reconnect_token"] = o.ReconnectToken
	toSerialize["user_workspace_path"] = o.UserWorkspacePath
	toSerialize["workspace_path"] = o.WorkspacePath
	return toSerialize, nil
}

func (o *SandboxForkResponseAllOfDataStartResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bootup_type",
		"cluster",
		"id",
		"latest_pitcher_version",
		"pitcher_manager_version",
		"pitcher_token",
		"pitcher_url",
		"pitcher_version",
		"reconnect_token",
		"user_workspace_path",
		"workspace_path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSandboxForkResponseAllOfDataStartResponse := _SandboxForkResponseAllOfDataStartResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSandboxForkResponseAllOfDataStartResponse)

	if err != nil {
		return err
	}

	*o = SandboxForkResponseAllOfDataStartResponse(varSandboxForkResponseAllOfDataStartResponse)

	return err
}

type NullableSandboxForkResponseAllOfDataStartResponse struct {
	value *SandboxForkResponseAllOfDataStartResponse
	isSet bool
}

func (v NullableSandboxForkResponseAllOfDataStartResponse) Get() *SandboxForkResponseAllOfDataStartResponse {
	return v.value
}

func (v *NullableSandboxForkResponseAllOfDataStartResponse) Set(val *SandboxForkResponseAllOfDataStartResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxForkResponseAllOfDataStartResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxForkResponseAllOfDataStartResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxForkResponseAllOfDataStartResponse(val *SandboxForkResponseAllOfDataStartResponse) *NullableSandboxForkResponseAllOfDataStartResponse {
	return &NullableSandboxForkResponseAllOfDataStartResponse{value: val, isSet: true}
}

func (v NullableSandboxForkResponseAllOfDataStartResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxForkResponseAllOfDataStartResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


